plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

// 키스토어 속성을 로드하기 위한 설정 추가
def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file("key.properties")
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace "com.example.dongdaemoon_beta_v1"
    // compileSdkVersion flutter.compileSdkVersion
    compileSdkVersion 34
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
//        main {
//            java.srcDirs = ['src/main/java']
//            kotlin.srcDirs = ['src/main/kotlin']
//            res.srcDirs = ['src/main/res']
//        }
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.example.dongdaemoon_beta_v1"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        // minSdkVersion flutter.minSdkVersion
        // sdk 최소버전을 21로 지정 (Multidex는 최소 sdk 21버전 이상부터 자동으로 활성화되므로 설정)
        minSdkVersion 21
        // targetSdkVersion flutter.targetSdkVersion
        targetSdkVersion 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        // 64K 메소드 제한을 초과하여 Multidex 지원 활성화 설정
        multiDexEnabled true
    }

    // 서명 키스토어 설정 추가
    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }
    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
//            signingConfig signingConfigs.debug
            // 릴리스 빌드에 사용될 서명 구성 지정
            signingConfig signingConfigs.release
            // 코드 난독화 및 최적화를 위해 minifyEnabled를 활성화
            // true로 설정하면 코드가 축소되고 최적화됩니다.
            minifyEnabled true
            // 사용되지 않는 리소스를 제거하여 APK 크기를 줄이는 옵션
            shrinkResources true
            // ProGuard 구성을 지정
            // 기본 ProGuard 파일을 사용하며, 추가 사용자 정의 규칙 파일(proguard-rules.pro)을 포함
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

        }
    }

    // Lint 설정 추가: 기존 오류는 무시하고 새로운 오류만 감지
    lint {
        baseline = file("lint-baseline.xml")
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
}

apply plugin: 'com.google.gms.google-services'

