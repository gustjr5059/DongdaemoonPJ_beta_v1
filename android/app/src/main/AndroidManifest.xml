<!--안드로이드에 API 연결하기 위한 패키지 지정 관련 로직-->
<!--    Android Manifest 파일에서 tools 네임스페이스를 추가하는 역할-->
<!--    tools 네임스페이스는 Android Lint 도구에서 특정 검사를 무시하거나 맞춤 설정을 할 수 있게 해주는 속성을 정의-->
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    package="com.example.dongdaemoon_beta_v1">
    <!--안드로이드 기반 앱에 인터넷 연결 관련 로직-->
    <uses-permission android:name="android.permission.INTERNET"/>
    <!--
        이 권한은 애플리케이션이 네트워크 상태에 접근할 수 있도록 허용합니다.
        이를 통해 애플리케이션은 네트워크 연결 여부 및 연결 유형(예: Wi-Fi, 모바일 데이터)을 확인할 수 있습니다.
        예를 들어, 애플리케이션이 인터넷 연결이 필요한 작업을 수행하기 전에
        네트워크 상태를 확인하여 연결이 되어 있는지 확인할 수 있습니다.
    -->
    <!-- 네트워크 상태에 접근하기 위한 권한 -->
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>
    <!-- Android 13 (API 33) 이상에서는 READ_MEDIA_IMAGES 권한을 추가하여 갤러리 접근 권한을 설정 -->
    <uses-permission android:name="android.permission.READ_MEDIA_IMAGES" />

    <application
        android:label="dongdaemoon_beta_v1"
        android:icon="@mipmap/ic_launcher"
        android:enableOnBackInvokedCallback="true"
        android:requestLegacyExternalStorage="true"> <!-- Android 10 (API 29) 이상에서는 requestLegacyExternalStorage 설정 추가 -->

        <!--android:enableOnBackInvokedCallback="true" 설정을 통해 백 버튼 이벤트가 정상적으로 활성화되었고,
        사용자가 기기에서 백 버튼을 조작할 때 이벤트가 발생하면 앱이 이를 감지하고 적절히 반응할 수 있도록 준비된 상태-->


        <!--Android 12(API 레벨 31) 이상에서 새롭게 도입된 OnBackInvokedCallback 기능을 활성화하여,
        백 버튼을 눌렀을 때 새로운 콜백 메커니즘을 통해 반응하게 하여 사용자가 백 버튼을 눌렀을 때
        특정 작업을 취소하거나 추가적인 액션을 취할 수 있는 기회를 제공 -->
        <!--android:icon="@mipmap/ic_launcher" : 사용자가 앱을 다운로드 받을 때,
        보이는 앱 아이콘 디자인 부분임-추후에 디자이너가 앱 아이콘 모양 그려주면 해당 이미지 추가하면 됨.-->
        <activity
            android:name=".MainActivity"
            android:exported="true"
            android:launchMode="singleTop"
            android:theme="@style/LaunchTheme"
            android:configChanges="orientation|keyboardHidden|keyboard|screenSize|smallestScreenSize|locale|layoutDirection|fontScale|screenLayout|density|uiMode"
            android:hardwareAccelerated="true"
            android:windowSoftInputMode="adjustResize"
            tools:ignore="Instantiatable">
<!--            tools:ignore="Instantiatable"을 사용하면 Lint 검사 도구가 해당 경고를 무시하도록 지시하여 더 이상 "MainActivity must extend android.app.Activity"와 같은 경고를 표시하지 않게 됨-->
            <!-- Specifies an Android theme to apply to this Activity as soon as
                 the Android process has started. This theme is visible to the user
                 while the Flutter UI initializes. After that, this theme continues
                 to determine the Window background behind the Flutter UI. -->

            <!-- 앱 실행 시 시작되는 메인 액티비티 설정 -->
            <intent-filter>
                <action android:name="android.intent.action.MAIN"/>
                <category android:name="android.intent.category.LAUNCHER"/>
            </intent-filter>

            <!-- 웹 링크를 여는 인텐트 필터 추가 -->
            <!-- 사용자가 앱에서 http 및 https 링크를 클릭할 때 이 액티비티가 호출됨 -->
            <intent-filter>
                <action android:name="android.intent.action.VIEW"/>
                <category android:name="android.intent.category.DEFAULT"/>
                <category android:name="android.intent.category.BROWSABLE"/>
                <data android:scheme="http"/>
                <data android:scheme="https"/>
            </intent-filter>

            <!-- Flutter 관련 메타데이터 설정 -->
            <meta-data
              android:name="io.flutter.embedding.android.NormalTheme"
              android:resource="@style/NormalTheme"
              />
            <intent-filter>
                <action android:name="android.intent.action.MAIN"/>
                <category android:name="android.intent.category.LAUNCHER"/>
            </intent-filter>
        </activity>
        <!-- Don't delete the meta-data below.
             This is used by the Flutter tool to generate GeneratedPluginRegistrant.java -->
        <!-- Flutter 관련 메타데이터 설정 -->

        <!-- Flutter 도구에서 생성된 플러그인 등록을 위한 메타데이터 -->
        <meta-data
            android:name="flutterEmbedding"
            android:value="2" />
    </application>
</manifest>
